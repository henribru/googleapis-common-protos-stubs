# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LabelDescriptor(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ValueTypeValue = typing___NewType("ValueTypeValue", builtin___int)
    type___ValueTypeValue = ValueTypeValue
    ValueType: _ValueType
    class _ValueType(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            LabelDescriptor.ValueTypeValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        STRING = typing___cast(LabelDescriptor.ValueTypeValue, 0)
        BOOL = typing___cast(LabelDescriptor.ValueTypeValue, 1)
        INT64 = typing___cast(LabelDescriptor.ValueTypeValue, 2)
    STRING = typing___cast(LabelDescriptor.ValueTypeValue, 0)
    BOOL = typing___cast(LabelDescriptor.ValueTypeValue, 1)
    INT64 = typing___cast(LabelDescriptor.ValueTypeValue, 2)
    type___ValueType = ValueType

    key: typing___Text = ...
    value_type: type___LabelDescriptor.ValueTypeValue = ...
    description: typing___Text = ...
    def __init__(
        self,
        *,
        key: typing___Optional[typing___Text] = None,
        value_type: typing___Optional[type___LabelDescriptor.ValueTypeValue] = None,
        description: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "description", b"description", "key", b"key", "value_type", b"value_type"
        ],
    ) -> None: ...

type___LabelDescriptor = LabelDescriptor
