"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2015 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class LabelDescriptor(google.protobuf.message.Message):
    """A description of a label."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ValueType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ValueTypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            LabelDescriptor._ValueType.ValueType
        ],
        builtins.type,
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STRING: LabelDescriptor._ValueType.ValueType  # 0
        """A variable-length string. This is the default."""
        BOOL: LabelDescriptor._ValueType.ValueType  # 1
        """Boolean; true or false."""
        INT64: LabelDescriptor._ValueType.ValueType  # 2
        """A 64-bit signed integer."""

    class ValueType(_ValueType, metaclass=_ValueTypeEnumTypeWrapper):
        """Value types that can be used as label values."""

    STRING: LabelDescriptor.ValueType.ValueType  # 0
    """A variable-length string. This is the default."""
    BOOL: LabelDescriptor.ValueType.ValueType  # 1
    """Boolean; true or false."""
    INT64: LabelDescriptor.ValueType.ValueType  # 2
    """A 64-bit signed integer."""

    KEY_FIELD_NUMBER: builtins.int
    VALUE_TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    key: builtins.str
    """The label key."""
    value_type: global___LabelDescriptor.ValueType.ValueType
    """The type of data that can be assigned to the label."""
    description: builtins.str
    """A human-readable description for the label."""
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        value_type: global___LabelDescriptor.ValueType.ValueType = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "description", b"description", "key", b"key", "value_type", b"value_type"
        ],
    ) -> None: ...

global___LabelDescriptor = LabelDescriptor
