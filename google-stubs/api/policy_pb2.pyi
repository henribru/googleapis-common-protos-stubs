"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2023 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.descriptor_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.extension_dict
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FieldPolicy(google.protobuf.message.Message):
    """Google API Policy Annotation

    This message defines a simple API policy annotation that can be used to
    annotate API request and response message fields with applicable policies.
    One field may have multiple applicable policies that must all be satisfied
    before a request can be processed. This policy annotation is used to
    generate the overall policy that will be used for automatic runtime
    policy enforcement and documentation generation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SELECTOR_FIELD_NUMBER: builtins.int
    RESOURCE_PERMISSION_FIELD_NUMBER: builtins.int
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    selector: builtins.str
    """Selects one or more request or response message fields to apply this
    `FieldPolicy`.

    When a `FieldPolicy` is used in proto annotation, the selector must
    be left as empty. The service config generator will automatically fill
    the correct value.

    When a `FieldPolicy` is used in service config, the selector must be a
    comma-separated string with valid request or response field paths,
    such as "foo.bar" or "foo.bar,foo.baz".
    """
    resource_permission: builtins.str
    """Specifies the required permission(s) for the resource referred to by the
    field. It requires the field contains a valid resource reference, and
    the request must pass the permission checks to proceed. For example,
    "resourcemanager.projects.get".
    """
    resource_type: builtins.str
    """Specifies the resource type for the resource referred to by the field."""
    def __init__(
        self,
        *,
        selector: builtins.str = ...,
        resource_permission: builtins.str = ...,
        resource_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "resource_permission",
            b"resource_permission",
            "resource_type",
            b"resource_type",
            "selector",
            b"selector",
        ],
    ) -> None: ...

global___FieldPolicy = FieldPolicy

@typing_extensions.final
class MethodPolicy(google.protobuf.message.Message):
    """Defines policies applying to an RPC method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SELECTOR_FIELD_NUMBER: builtins.int
    REQUEST_POLICIES_FIELD_NUMBER: builtins.int
    selector: builtins.str
    """Selects a method to which these policies should be enforced, for example,
    "google.pubsub.v1.Subscriber.CreateSubscription".

    Refer to [selector][google.api.DocumentationRule.selector] for syntax
    details.

    NOTE: This field must not be set in the proto annotation. It will be
    automatically filled by the service config compiler .
    """
    @property
    def request_policies(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___FieldPolicy
    ]:
        """Policies that are applicable to the request message."""

    def __init__(
        self,
        *,
        selector: builtins.str = ...,
        request_policies: collections.abc.Iterable[global___FieldPolicy] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "request_policies", b"request_policies", "selector", b"selector"
        ],
    ) -> None: ...

global___MethodPolicy = MethodPolicy

FIELD_POLICY_FIELD_NUMBER: builtins.int
METHOD_POLICY_FIELD_NUMBER: builtins.int
field_policy: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[
    google.protobuf.descriptor_pb2.FieldOptions, global___FieldPolicy
]
"""See [FieldPolicy][]."""
method_policy: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[
    google.protobuf.descriptor_pb2.MethodOptions, global___MethodPolicy
]
"""See [MethodPolicy][]."""
