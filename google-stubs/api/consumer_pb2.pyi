"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ProjectProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def properties(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Property
    ]: ...
    def __init__(
        self,
        *,
        properties: typing.Optional[typing.Iterable[global___Property]] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["properties", b"properties"]
    ) -> None: ...

global___ProjectProperties = ProjectProperties

class Property(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PropertyType(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PropertyType.V],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED = Property.PropertyType.V(0)
        INT64 = Property.PropertyType.V(1)
        BOOL = Property.PropertyType.V(2)
        STRING = Property.PropertyType.V(3)
        DOUBLE = Property.PropertyType.V(4)
    class PropertyType(metaclass=_PropertyType):
        V = typing.NewType("V", builtins.int)
    UNSPECIFIED = Property.PropertyType.V(0)
    INT64 = Property.PropertyType.V(1)
    BOOL = Property.PropertyType.V(2)
    STRING = Property.PropertyType.V(3)
    DOUBLE = Property.PropertyType.V(4)

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    type: global___Property.PropertyType.V = ...
    description: typing.Text = ...
    def __init__(
        self,
        *,
        name: typing.Text = ...,
        type: global___Property.PropertyType.V = ...,
        description: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "description", b"description", "name", b"name", "type", b"type"
        ],
    ) -> None: ...

global___Property = Property
