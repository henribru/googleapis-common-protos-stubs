"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Distribution(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Range(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MIN_FIELD_NUMBER: builtins.int
        MAX_FIELD_NUMBER: builtins.int
        min: builtins.float = ...
        max: builtins.float = ...
        def __init__(
            self,
            *,
            min: builtins.float = ...,
            max: builtins.float = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions.Literal["max", b"max", "min", b"min"]
        ) -> None: ...
    class BucketOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Linear(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NUM_FINITE_BUCKETS_FIELD_NUMBER: builtins.int
            WIDTH_FIELD_NUMBER: builtins.int
            OFFSET_FIELD_NUMBER: builtins.int
            num_finite_buckets: builtins.int = ...
            width: builtins.float = ...
            offset: builtins.float = ...
            def __init__(
                self,
                *,
                num_finite_buckets: builtins.int = ...,
                width: builtins.float = ...,
                offset: builtins.float = ...,
            ) -> None: ...
            def ClearField(
                self,
                field_name: typing_extensions.Literal[
                    "num_finite_buckets",
                    b"num_finite_buckets",
                    "offset",
                    b"offset",
                    "width",
                    b"width",
                ],
            ) -> None: ...
        class Exponential(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NUM_FINITE_BUCKETS_FIELD_NUMBER: builtins.int
            GROWTH_FACTOR_FIELD_NUMBER: builtins.int
            SCALE_FIELD_NUMBER: builtins.int
            num_finite_buckets: builtins.int = ...
            growth_factor: builtins.float = ...
            scale: builtins.float = ...
            def __init__(
                self,
                *,
                num_finite_buckets: builtins.int = ...,
                growth_factor: builtins.float = ...,
                scale: builtins.float = ...,
            ) -> None: ...
            def ClearField(
                self,
                field_name: typing_extensions.Literal[
                    "growth_factor",
                    b"growth_factor",
                    "num_finite_buckets",
                    b"num_finite_buckets",
                    "scale",
                    b"scale",
                ],
            ) -> None: ...
        class Explicit(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            BOUNDS_FIELD_NUMBER: builtins.int
            bounds: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
                builtins.float
            ] = ...
            def __init__(
                self,
                *,
                bounds: typing.Optional[typing.Iterable[builtins.float]] = ...,
            ) -> None: ...
            def ClearField(
                self, field_name: typing_extensions.Literal["bounds", b"bounds"]
            ) -> None: ...
        LINEAR_BUCKETS_FIELD_NUMBER: builtins.int
        EXPONENTIAL_BUCKETS_FIELD_NUMBER: builtins.int
        EXPLICIT_BUCKETS_FIELD_NUMBER: builtins.int
        @property
        def linear_buckets(self) -> global___Distribution.BucketOptions.Linear: ...
        @property
        def exponential_buckets(
            self,
        ) -> global___Distribution.BucketOptions.Exponential: ...
        @property
        def explicit_buckets(self) -> global___Distribution.BucketOptions.Explicit: ...
        def __init__(
            self,
            *,
            linear_buckets: typing.Optional[
                global___Distribution.BucketOptions.Linear
            ] = ...,
            exponential_buckets: typing.Optional[
                global___Distribution.BucketOptions.Exponential
            ] = ...,
            explicit_buckets: typing.Optional[
                global___Distribution.BucketOptions.Explicit
            ] = ...,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions.Literal[
                "explicit_buckets",
                b"explicit_buckets",
                "exponential_buckets",
                b"exponential_buckets",
                "linear_buckets",
                b"linear_buckets",
                "options",
                b"options",
            ],
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "explicit_buckets",
                b"explicit_buckets",
                "exponential_buckets",
                b"exponential_buckets",
                "linear_buckets",
                b"linear_buckets",
                "options",
                b"options",
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions.Literal["options", b"options"]
        ) -> typing_extensions.Literal[
            "linear_buckets", "exponential_buckets", "explicit_buckets"
        ]: ...
    class Exemplar(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VALUE_FIELD_NUMBER: builtins.int
        TIMESTAMP_FIELD_NUMBER: builtins.int
        ATTACHMENTS_FIELD_NUMBER: builtins.int
        value: builtins.float = ...
        @property
        def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        @property
        def attachments(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            google.protobuf.any_pb2.Any
        ]: ...
        def __init__(
            self,
            *,
            value: builtins.float = ...,
            timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            attachments: typing.Optional[
                typing.Iterable[google.protobuf.any_pb2.Any]
            ] = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["timestamp", b"timestamp"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "attachments",
                b"attachments",
                "timestamp",
                b"timestamp",
                "value",
                b"value",
            ],
        ) -> None: ...
    COUNT_FIELD_NUMBER: builtins.int
    MEAN_FIELD_NUMBER: builtins.int
    SUM_OF_SQUARED_DEVIATION_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    BUCKET_OPTIONS_FIELD_NUMBER: builtins.int
    BUCKET_COUNTS_FIELD_NUMBER: builtins.int
    EXEMPLARS_FIELD_NUMBER: builtins.int
    count: builtins.int = ...
    mean: builtins.float = ...
    sum_of_squared_deviation: builtins.float = ...
    bucket_counts: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.int
    ] = ...
    @property
    def range(self) -> global___Distribution.Range: ...
    @property
    def bucket_options(self) -> global___Distribution.BucketOptions: ...
    @property
    def exemplars(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Distribution.Exemplar
    ]: ...
    def __init__(
        self,
        *,
        count: builtins.int = ...,
        mean: builtins.float = ...,
        sum_of_squared_deviation: builtins.float = ...,
        range: typing.Optional[global___Distribution.Range] = ...,
        bucket_options: typing.Optional[global___Distribution.BucketOptions] = ...,
        bucket_counts: typing.Optional[typing.Iterable[builtins.int]] = ...,
        exemplars: typing.Optional[
            typing.Iterable[global___Distribution.Exemplar]
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "bucket_options", b"bucket_options", "range", b"range"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "bucket_counts",
            b"bucket_counts",
            "bucket_options",
            b"bucket_options",
            "count",
            b"count",
            "exemplars",
            b"exemplars",
            "mean",
            b"mean",
            "range",
            b"range",
            "sum_of_squared_deviation",
            b"sum_of_squared_deviation",
        ],
    ) -> None: ...

global___Distribution = Distribution
