"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Quota(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LIMITS_FIELD_NUMBER: builtins.int
    METRIC_RULES_FIELD_NUMBER: builtins.int
    @property
    def limits(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___QuotaLimit
    ]: ...
    @property
    def metric_rules(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___MetricRule
    ]: ...
    def __init__(
        self,
        *,
        limits: typing.Optional[typing.Iterable[global___QuotaLimit]] = ...,
        metric_rules: typing.Optional[typing.Iterable[global___MetricRule]] = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "limits", b"limits", "metric_rules", b"metric_rules"
        ],
    ) -> None: ...

global___Quota = Quota

class MetricRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetricCostsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    SELECTOR_FIELD_NUMBER: builtins.int
    METRIC_COSTS_FIELD_NUMBER: builtins.int
    selector: typing.Text = ...
    @property
    def metric_costs(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(
        self,
        *,
        selector: typing.Text = ...,
        metric_costs: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "metric_costs", b"metric_costs", "selector", b"selector"
        ],
    ) -> None: ...

global___MetricRule = MetricRule

class QuotaLimit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEFAULT_LIMIT_FIELD_NUMBER: builtins.int
    MAX_LIMIT_FIELD_NUMBER: builtins.int
    FREE_TIER_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    description: typing.Text = ...
    default_limit: builtins.int = ...
    max_limit: builtins.int = ...
    free_tier: builtins.int = ...
    duration: typing.Text = ...
    metric: typing.Text = ...
    unit: typing.Text = ...
    display_name: typing.Text = ...
    @property
    def values(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(
        self,
        *,
        name: typing.Text = ...,
        description: typing.Text = ...,
        default_limit: builtins.int = ...,
        max_limit: builtins.int = ...,
        free_tier: builtins.int = ...,
        duration: typing.Text = ...,
        metric: typing.Text = ...,
        unit: typing.Text = ...,
        values: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        display_name: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "default_limit",
            b"default_limit",
            "description",
            b"description",
            "display_name",
            b"display_name",
            "duration",
            b"duration",
            "free_tier",
            b"free_tier",
            "max_limit",
            b"max_limit",
            "metric",
            b"metric",
            "name",
            b"name",
            "unit",
            b"unit",
            "values",
            b"values",
        ],
    ) -> None: ...

global___QuotaLimit = QuotaLimit
