"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Context(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULES_FIELD_NUMBER: builtins.int
    @property
    def rules(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___ContextRule
    ]: ...
    def __init__(
        self,
        *,
        rules: typing.Optional[typing.Iterable[global___ContextRule]] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["rules", b"rules"]
    ) -> None: ...

global___Context = Context

class ContextRule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SELECTOR_FIELD_NUMBER: builtins.int
    REQUESTED_FIELD_NUMBER: builtins.int
    PROVIDED_FIELD_NUMBER: builtins.int
    selector: typing.Text = ...
    requested: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        typing.Text
    ] = ...
    provided: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        typing.Text
    ] = ...
    def __init__(
        self,
        *,
        selector: typing.Text = ...,
        requested: typing.Optional[typing.Iterable[typing.Text]] = ...,
        provided: typing.Optional[typing.Iterable[typing.Text]] = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "provided", b"provided", "requested", b"requested", "selector", b"selector"
        ],
    ) -> None: ...

global___ContextRule = ContextRule
